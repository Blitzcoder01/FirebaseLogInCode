import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.content.Intent;

import android.util.Patterns;

import android.view.View;

import android.widget.EditText;

import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class LogIn extends AppCompatActivity implements View.OnClickListener{
    private FirebaseAuth mAuth;
    EditText signin ,id_password;
    private DatabaseReference RootReference;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_log_in);
        mAuth = FirebaseAuth.getInstance();
        signin= findViewById(R.id.signin);
        id_password= findViewById(R.id.id_password);
        RootReference= FirebaseDatabase.getInstance().getReference();
        findViewById(R.id.guide).setOnClickListener(this);
        findViewById(R.id.login_button).setOnClickListener(this);
    }
    private void UserLogIn(){

        String email= signin.getText().toString().trim();
        String password= id_password.getText().toString().trim();

        if(email.isEmpty()){
            signin.setError("Email_id is required");
            signin.requestFocus();
            return;

        }


        else if(password.isEmpty()){
            id_password.setError("Password is required");
            id_password.requestFocus();
            return;
        }
        if(!Patterns.EMAIL_ADDRESS.matcher(email).matches()){
            signin.setError("enter valid email id");
            signin.requestFocus();
            return;
        }
        if(password.length()<8){
            id_password.setError("minimum length of password must be eight");
            id_password.requestFocus();
            return;

        }
        mAuth.signInWithEmailAndPassword(email,password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if(task.isSuccessful()){
                    String currentUserId =mAuth.getCurrentUser().getUid();
                    RootReference.child("App Users ").child(currentUserId).setValue(" ");

                    Intent intent =new Intent(LogIn.this,Chats.class);
                    intent.addFlags( Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
                    startActivity(intent);
                    Toast.makeText(getApplicationContext(),"LoggedIn Successfully",Toast.LENGTH_SHORT).show();
                }
                else{
                    Toast.makeText(getApplicationContext(),"Wrong email or password",Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    @Override
    public void onClick(View v) {
        switch(v.getId()){
            case R.id.login_button:
                UserLogIn();
                break;
            case R.id.guide:
                startActivity(new Intent(this,SignUp.class));
                break;

        }

    }

}
